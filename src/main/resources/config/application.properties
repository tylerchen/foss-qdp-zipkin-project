###USE UTF-8 encoding to open and edit this file
###https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
###https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html

##------------------------------------------------------------------------------------------##
#Spring Boot 所提供的配置优先级顺序比较复杂。按照优先级从高到低的顺序，具体的列表如下所示。
#    1. 命令行参数。
#    2. 通过 System.getProperties() 获取的 Java 系统参数。
#    3. 操作系统环境变量。
#    4. 从 java:comp/env 得到的 JNDI 属性。
#    5. 通过 RandomValuePropertySource 生成的“random.*”属性。
#    6. 应用 Jar 文件之外的属性文件。(通过spring.config.location参数)
#    7. 应用 Jar 文件内部的属性文件。
#    8. 在应用配置 Java 类（包含“@Configuration”注解的 Java 类）中通过“@PropertySource”注解声明的属性文件。
#    9. 通过“SpringApplication.setDefaultProperties”声明的默认属性。
#Spring Boot 的这个配置优先级看似复杂，其实是很合理的。比如命令行参数的优先级被设置为最高。
#这样的好处是可以在测试或生产环境中快速地修改配置参数值，而不需要重新打包和部署应用。
#SpringApplication 类默认会把以“--”开头的命令行参数转化成应用中可以使用的配置参数，如 “--name=Alex” 会设置配置参数 “name” 的值为 “Alex”。
#如果不需要这个功能，可以通过 “SpringApplication.setAddCommandLineProperties(false)” 禁用解析命令行参数。
###------------------------------------------------------------------------------------------##

# APPLICATION SETTINGS (SpringApplication)
#logging.level.org.springframework=DEBUG
spring.main.sources=classpath:META-INF/spring/root.xml

# multipart SETTINGS (SpringApplication)
multipart.maxFileSize=5MB
multipart.maxRequestSize=5MB

# http server SETTINGS (SpringApplication)
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
#server.port=8080

server.port=9300

spring.application.name=foss-qdp-zipkin-project

eureka.instance.metadata-map.cluster=financecluster
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:9200/eureka/
